spring:
  application.name: resilience4j-demo
  jackson.serialization.indent_output: true

management:
  endpoints.web.exposure.include:
    - '*'
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        # When set to true, Resilience4J will register a health indicator bean for each circuit breaker.
        # This health indicator provides information about the state of the circuit breaker, including whether it's closed, open, or half-open.
        registerHealthIndicator: true
        slidingWindowType: COUNT_BASED
        
        #  Defines the size of the sliding window for measuring the failure rate of requests.
        # In this case, it tracks the last 5 requests to decide whether the failure rate has exceeded the threshold.
        slidingWindowSize: 5
        
        #  Failure rate threshold is set to 50%, meaning that if 50% or more of the requests within the sliding window (last 5 requests) fail, the circuit breaker will open.
        failureRateThreshold: 50
        
        # When the circuit is in the half-open state, this property defines how many calls are allowed to pass through to test if the service is back to normal.
        # In this case, 3 calls are allowed.
        permittedNumberOfCallsInHalfOpenState : 3
        
        # Defines how long the circuit breaker will stay open before it transitions to the half-open state. In this case, the circuit remains open for 10 seconds.
        waitDurationInOpenState: 10s
    instances:
      # Define the circuit breaker instance for a specific service
      helloService:
        baseConfig: default
      
        # Specifies the minimum number of requests that must be made before the circuit breaker starts evaluating the failure rate.
        # In this case, it waits for at least 5 calls before deciding whether to open the circuit.
        minimum-number-of-calls: 5
        
        automatic-transition-from-open-to-half-open-enabled: true
    
        
    
